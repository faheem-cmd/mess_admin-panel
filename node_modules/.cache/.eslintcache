[{"/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/index.js":"1","/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/App.js":"2","/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/reportWebVitals.js":"3","/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/components/login.component.js":"4","/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/components/signup.component.js":"5","/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/utils/request.js":"6","/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/components/Dashboard.js":"7","/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/components/Navbar.js":"8","/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/components/DataTable.js":"9","/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/components/Home.js":"10","/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/components/Nodata.js":"11"},{"size":535,"mtime":1659341876013,"results":"12","hashOfConfig":"13"},{"size":916,"mtime":1659415646870,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1659097232346,"results":"15","hashOfConfig":"13"},{"size":5551,"mtime":1659415120560,"results":"16","hashOfConfig":"13"},{"size":1584,"mtime":1659341142009,"results":"17","hashOfConfig":"13"},{"size":1302,"mtime":1659418768492,"results":"18","hashOfConfig":"13"},{"size":1636,"mtime":1659419494808,"results":"19","hashOfConfig":"13"},{"size":6342,"mtime":1659421048686,"results":"20","hashOfConfig":"13"},{"size":706,"mtime":1659419046229,"results":"21","hashOfConfig":"13"},{"size":521,"mtime":1659359366607,"results":"22","hashOfConfig":"13"},{"size":122,"mtime":1659415653615,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1s9jnyj",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/index.js",[],[],[],"/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/App.js",["65"],[],"import React from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport Login from \"./components/login.component\";\nimport SignUp from \"./components/signup.component\";\nimport Dashboard from \"./components/Dashboard\";\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <Router>\n        {/* \n        <div className=\"auth-wrapper\">\n          <div className=\"auth-inner\"> */}\n        <Routes>\n          <Route exact path=\"/\" element={<Login />} />\n          <Route path=\"/sign-in\" element={<Login />} />\n          <Route path=\"/sign-up\" element={<SignUp />} />\n          <Route path=\"/home\" element={<Dashboard />} />\n        </Routes>\n        {/* </div>\n        </div> */}\n      </Router>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n",[],"/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/reportWebVitals.js",[],[],"/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/components/login.component.js",["66","67","68","69","70","71"],[],"import React, { Component, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { loginCall } from \"../utils/request\";\nimport { TextField } from \"@mui/material\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\nconst Login = () => {\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [hide, setHide] = useState(false);\n\n  const handleNavigate = (e) => {\n    e.preventDefault();\n    console.log(email.length);\n    if (email === \"\") {\n      toast.info(\"Enter email\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } else if (password === \"\") {\n      toast.info(\"Enter password\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } else {\n      loginCall(email, password)\n        .then((res) => {\n          if (res.status === \"success\") {\n            console.log(res);\n            toast.success(\"Successfully logged!\", {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n            notify(res.data.accessToken);\n          } else {\n            toast.warning(\"Inavlid Credentails !\", {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          }\n        })\n        .catch((err) => {\n          toast.warning(\"Inavlid Credentails !\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        });\n    }\n  };\n\n  const notify = async (res) => {\n    await localStorage.setItem(\"token\", res);\n    setTimeout(function () {\n      navigate(\"/home\");\n    }, 2000);\n  };\n\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to={\"/sign-in\"}>\n            My Mess\n          </Link>\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={\"/sign-in\"}>\n                  Login\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={\"/sign-up\"}>\n                  Sign up\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"auth-wrapper\">\n        <div className=\"auth-inner\">\n          <form>\n            <h3>Sign In</h3>\n\n            <div className=\"mb-3\">\n              <label>Email address</label>\n\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <label>Password</label>\n              <input\n                type={hide ? \"text\" : \"password\"}\n                className=\"form-control\"\n                placeholder=\"Enter password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <div className=\"custom-control custom-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  className=\"custom-control-input\"\n                  id=\"customCheck1\"\n                  onClick={() => setHide(!hide)}\n                />\n                <label\n                  className=\"custom-control-label\"\n                  htmlFor=\"customCheck1\"\n                  style={{ paddingLeft: 10 }}\n                >\n                  Show password\n                </label>\n              </div>\n            </div>\n\n            <div className=\"d-grid\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={(e) => handleNavigate(e)}\n              >\n                Submit\n              </button>\n              <ToastContainer\n                position=\"top-right\"\n                autoClose={5000}\n                hideProgressBar={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss\n                draggable\n                pauseOnHover\n              />\n            </div>\n            <p className=\"forgot-password text-right\" style={{ marginTop: 30 }}>\n              Not <a href=\"#\">Register ?</a>\n            </p>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/components/signup.component.js",[],[],"/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/utils/request.js",["72"],[],"import axios from \"axios\";\nimport React from \"react\";\n\nexport const baseUrl = \" https://3bf0-115-246-244-26.in.ngrok.io/\";\n// export const baseUrl = 'http://192.168.10.199:8000/api/';\n\nexport const loginCall = (email, password) => {\n  const URL = baseUrl + \"ad_login\";\n  return axios(URL, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"content-type\": \"application/json\",\n    },\n    data: {\n      email: email,\n      password: password,\n    },\n  })\n    .then((response) => response.data)\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const logout = (token) => {\n  console.log(token);\n  // const URL = baseUrl + \"adminLogout\";\n  return axios(` https://3bf0-115-246-244-26.in.ngrok.io/adminLogout/`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((response) => response.data)\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const users = () => {\n  const URL = baseUrl + `users`;\n  return axios(URL, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"content-type\": \"application/json\",\n    },\n  })\n    .then((response) => response.data)\n    .catch((error) => {\n      throw error;\n    });\n};\n","/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/components/Dashboard.js",["73","74","75"],[],"import React, { useState, useEffect } from \"react\";\nimport Simple from \"./Navbar\";\nimport DataTable from \"../components/DataTable\";\nimport { users } from \"../utils/request\";\n\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  TableContainer,\n} from \"@chakra-ui/react\";\nfunction Dashboard() {\n  const token = localStorage.getItem(\"token\");\n\n  useEffect(() => {\n    setTimeout(function () {\n      users().then((res) => {\n        console.log(res);\n        setDatas(res.data);\n      });\n      setLoading(false);\n    }, 2000);\n  }, []);\n\n  const [datas, setDatas] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n  return (\n    <div>\n      {token ? (\n        <Simple\n          children={\n            <TableContainer>\n              <Table variant=\"striped\" colorScheme=\"teal\">\n                <TableCaption>\n                  Imperial to metric conversion factors\n                </TableCaption>\n                <Thead>\n                  <Tr>\n                    <Th>Name</Th>\n                    <Th>Email</Th>\n                    <Th isNumeric>Phone</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {datas.map((item) => (\n                    <Tr>\n                      <Td>{item.name}</Td>\n                      <Td>{item.email}</Td>\n                      <Td isNumeric>{item.phone}</Td>\n                    </Tr>\n                  ))}\n                </Tbody>\n              </Table>\n            </TableContainer>\n          }\n        />\n      ) : (\n        <div>Authorization required..</div>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n","/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/components/Navbar.js",["76","77","78"],[],"import React, { ReactNode } from \"react\";\nimport {\n  IconButton,\n  Avatar,\n  Box,\n  CloseButton,\n  Flex,\n  HStack,\n  VStack,\n  Icon,\n  useColorModeValue,\n  Link,\n  Drawer,\n  DrawerContent,\n  Text,\n  useDisclosure,\n  BoxProps,\n  FlexProps,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/react\";\nimport {\n  FiHome,\n  FiTrendingUp,\n  FiCompass,\n  FiStar,\n  FiSettings,\n  FiMenu,\n  FiBell,\n  FiChevronDown,\n} from \"react-icons/fi\";\nimport { IconType } from \"react-icons\";\nimport { ReactText } from \"react\";\nimport { logout } from \"../utils/request\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface LinkItemProps {\n  name: string;\n  icon: IconType;\n}\nconst LinkItems: Array<LinkItemProps> = [\n  { name: \"Home\", icon: FiHome },\n  { name: \"Trending\", icon: FiTrendingUp },\n  { name: \"Explore\", icon: FiCompass },\n  { name: \"Favourites\", icon: FiStar },\n  { name: \"Settings\", icon: FiSettings },\n];\n\nexport default function Navbar({ children, props }) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <Box minH=\"100vh\" bg={useColorModeValue(\"gray.100\", \"gray.900\")}>\n      <SidebarContent\n        onClose={() => onClose}\n        display={{ base: \"none\", md: \"block\" }}\n      />\n      <Drawer\n        autoFocus={false}\n        isOpen={isOpen}\n        placement=\"left\"\n        onClose={onClose}\n        returnFocusOnClose={false}\n        onOverlayClick={onClose}\n        size=\"full\"\n      >\n        <DrawerContent>\n          <SidebarContent onClose={onClose} />\n        </DrawerContent>\n      </Drawer>\n      {/* mobilenav */}\n      <MobileNav onOpen={onOpen} />\n      <Box ml={{ base: 0, md: 60 }} p=\"4\">\n        {children}\n        {/* <DataTable /> */}\n      </Box>\n    </Box>\n  );\n}\n\ninterface SidebarProps extends BoxProps {\n  onClose: () => void;\n}\n\nconst SidebarContent = ({ onClose, ...rest }: SidebarProps) => {\n  const navigate = useNavigate();\n\n  return (\n    <Box\n      transition=\"3s ease\"\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderRight=\"1px\"\n      borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      w={{ base: \"full\", md: 60 }}\n      pos=\"fixed\"\n      h=\"full\"\n      {...rest}\n    >\n      <Flex h=\"20\" alignItems=\"center\" mx=\"8\" justifyContent=\"space-between\">\n        <Text fontSize=\"2xl\" fontFamily=\"monospace\" fontWeight=\"bold\">\n          Logo\n        </Text>\n        <CloseButton display={{ base: \"flex\", md: \"none\" }} onClick={onClose} />\n      </Flex>\n      {LinkItems.map((link) => (\n        <NavItem key={link.name} icon={link.icon}>\n          {link.name}\n        </NavItem>\n      ))}\n    </Box>\n  );\n};\n\ninterface NavItemProps extends FlexProps {\n  icon: IconType;\n  children: ReactText;\n}\nconst NavItem = ({ icon, children, ...rest }: NavItemProps) => {\n  return (\n    <Link\n      href=\"#\"\n      style={{ textDecoration: \"none\" }}\n      _focus={{ boxShadow: \"none\" }}\n    >\n      <Flex\n        align=\"center\"\n        p=\"4\"\n        mx=\"4\"\n        borderRadius=\"lg\"\n        role=\"group\"\n        cursor=\"pointer\"\n        _hover={{\n          bg: \"cyan.400\",\n          color: \"white\",\n        }}\n        {...rest}\n      >\n        {icon && (\n          <Icon\n            mr=\"4\"\n            fontSize=\"16\"\n            _groupHover={{\n              color: \"white\",\n            }}\n            as={icon}\n          />\n        )}\n        {children}\n      </Flex>\n    </Link>\n  );\n};\n\ninterface MobileProps extends FlexProps {\n  onOpen: () => void;\n}\n\nconst MobileNav = ({ onOpen, ...rest }: MobileProps) => {\n  const navigate = useNavigate();\n\n  const handleLogout = async () => {\n    const token = await localStorage.getItem(\"token\");\n    logout(token.toString())\n      .then((res) => {\n        if (res.status == 200) {\n          localStorage.clear();\n          navigate(\"/sign-in\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <Flex\n      ml={{ base: 0, md: 60 }}\n      px={{ base: 4, md: 4 }}\n      height=\"20\"\n      alignItems=\"center\"\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderBottomWidth=\"1px\"\n      borderBottomColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      justifyContent={{ base: \"space-between\", md: \"flex-end\" }}\n      {...rest}\n    >\n      <IconButton\n        display={{ base: \"flex\", md: \"none\" }}\n        onClick={onOpen}\n        variant=\"outline\"\n        aria-label=\"open menu\"\n        icon={<FiMenu />}\n      />\n\n      <Text\n        display={{ base: \"flex\", md: \"none\" }}\n        fontSize=\"2xl\"\n        fontFamily=\"monospace\"\n        fontWeight=\"bold\"\n      >\n        Logo\n      </Text>\n\n      <HStack spacing={{ base: \"0\", md: \"6\" }}>\n        <IconButton\n          size=\"lg\"\n          variant=\"ghost\"\n          aria-label=\"open menu\"\n          icon={<FiBell />}\n        />\n        <Flex alignItems={\"center\"}>\n          <Menu>\n            <MenuButton\n              py={2}\n              transition=\"all 0.3s\"\n              _focus={{ boxShadow: \"none\" }}\n            >\n              <HStack>\n                <Avatar\n                  size={\"sm\"}\n                  src={\n                    \"https://images.unsplash.com/photo-1619946794135-5bc917a27793?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=b616b2c5b373a80ffc9636ba24f7a4a9\"\n                  }\n                />\n                <VStack\n                  display={{ base: \"none\", md: \"flex\" }}\n                  alignItems=\"flex-start\"\n                  spacing=\"1px\"\n                  ml=\"2\"\n                >\n                  <Text fontSize=\"sm\">Justina Clark</Text>\n                  <Text fontSize=\"xs\" color=\"gray.600\">\n                    Admin\n                  </Text>\n                </VStack>\n                <Box display={{ base: \"none\", md: \"flex\" }}>\n                  <FiChevronDown />\n                </Box>\n              </HStack>\n            </MenuButton>\n            <MenuList\n              bg={useColorModeValue(\"white\", \"gray.900\")}\n              borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n            >\n              <MenuItem>Profile</MenuItem>\n              <MenuItem>Settings</MenuItem>\n              <MenuItem>Billing</MenuItem>\n              <MenuDivider />\n              <MenuItem onClick={() => handleLogout()}>Sign out</MenuItem>\n            </MenuList>\n          </Menu>\n        </Flex>\n      </HStack>\n    </Flex>\n  );\n};\n","/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/components/DataTable.js",["79"],[],"import {\n  Table,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  TableContainer,\n} from \"@chakra-ui/react\";\n\nconst DataTable = (props) => {\n  return (\n    <TableContainer>\n      <Table variant=\"striped\" colorScheme=\"teal\">\n        <TableCaption>Imperial to metric conversion factors</TableCaption>\n        <Thead>\n          <Tr>\n            <Th>Name</Th>\n            <Th>Email</Th>\n            <Th isNumeric>Phone</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          <Tr>\n            <Td>inches</Td>\n            <Td>millimetres (mm)</Td>\n            <Td isNumeric>25.4</Td>\n          </Tr>\n        </Tbody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default DataTable;\n","/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/components/Home.js",[],[],"/Users/faheem/Documents/MESS Project/Admin_panel/mess_admin/src/components/Nodata.js",[],[],{"ruleId":"80","severity":1,"message":"81","line":4,"column":50,"nodeType":"82","messageId":"83","endLine":4,"endColumn":54},{"ruleId":"80","severity":1,"message":"84","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"80","severity":1,"message":"85","line":6,"column":10,"nodeType":"82","messageId":"83","endLine":6,"endColumn":19},{"ruleId":"80","severity":1,"message":"86","line":7,"column":27,"nodeType":"82","messageId":"83","endLine":7,"endColumn":33},{"ruleId":"80","severity":1,"message":"87","line":7,"column":35,"nodeType":"82","messageId":"83","endLine":7,"endColumn":41},{"ruleId":"80","severity":1,"message":"88","line":7,"column":43,"nodeType":"82","messageId":"83","endLine":7,"endColumn":48},{"ruleId":"89","severity":1,"message":"90","line":179,"column":19,"nodeType":"91","endLine":179,"endColumn":31},{"ruleId":"80","severity":1,"message":"92","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":13},{"ruleId":"80","severity":1,"message":"93","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":17},{"ruleId":"80","severity":1,"message":"94","line":10,"column":3,"nodeType":"82","messageId":"83","endLine":10,"endColumn":8},{"ruleId":"80","severity":1,"message":"95","line":32,"column":10,"nodeType":"82","messageId":"83","endLine":32,"endColumn":17},{"ruleId":"80","severity":1,"message":"96","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"80","severity":1,"message":"97","line":89,"column":9,"nodeType":"82","messageId":"83","endLine":89,"endColumn":17},{"ruleId":"98","severity":1,"message":"99","line":168,"column":24,"nodeType":"100","messageId":"101","endLine":168,"endColumn":26},{"ruleId":"80","severity":1,"message":"94","line":5,"column":3,"nodeType":"82","messageId":"83","endLine":5,"endColumn":8},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'TextField' is defined but never used.","'Router' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'React' is defined but never used.","'DataTable' is defined but never used.","'Tfoot' is defined but never used.","'loading' is assigned a value but never used.","'ReactNode' is defined but never used.","'navigate' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]